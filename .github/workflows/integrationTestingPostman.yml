name: CI - Integration Test 

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ integration-testing ]
  pull_request:
    branches: [ integration-testing ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
        python-version: [3.x]
    services:
     # Label used to access the service container
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: lert        
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

   
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Git checkout 
      uses: actions/checkout@v2

    - name: Install Node JS ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f api/requirements.txt ]; then pip install -r api/requirements.txt; fi
    - name: Install Newman dependency
      run: npm install --prefix tests/postman/
    - name: Setup Database
      env:
        POSTGRES_HOST: localhost
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
    - name: Run the API and Postman's tests
      run: |
        cd api && flask run &
        sleep 2
        cd tests/postman/ && ./node_modules/newman/bin/newman.js run LERT Integration Tests.postman_collection.json -e ahm-local.postman_environment.json
        kill -9 `lsof -i:5000 -t`
      env:
        FLASK_ENV: development
        API_HOST: localhost
        FLASK_APP: main.py
        
        CI: true
